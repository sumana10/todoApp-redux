{"version":3,"sources":["action/action-type.js","components/Todo.js","action/todo.js","components/TodoForm.js","logo.svg","reducer/todo.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["ADD_TODO","REMOVE_TODO","connect","state","todos","dispatch","markComplete","id","type","payload","removeTodo","className","map","todo","title","onClick","addTodo","useState","setTitle","handleSubmit","e","preventDefault","alert","v4","onSubmit","name","placeholder","value","onChange","target","color","initialstate","rootReducer","combineReducers","action","filter","store","createStore","App","fluid","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOACaA,EAAW,WACXC,EAAc,c,cC6BZC,eATS,SAAAC,GAAK,MAAI,CAC/BC,MAAOD,EAAMC,UAGY,SAAAC,GAAQ,MAAI,CACrCC,aAAc,SAAAC,GACZF,ECnBsB,SAAAE,GAAE,MAAI,CAC9BC,KAAMP,EACNQ,QAASF,GDiBEG,CAAWH,QAGTL,EAxBF,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,MAAOE,EAAkB,EAAlBA,aACpB,OACE,cAAC,IAAD,CAAWK,UAAU,kBAArB,SACCP,EAAMQ,KAAI,SAACC,GAAD,OACT,eAAC,IAAD,WACGA,EAAKC,MACN,sBAAMC,QAAS,kBAAKT,EAAaO,EAAKN,KAAKI,UAAU,YAArD,SACE,cAAC,IAAD,QAHgBE,EAAKN,Y,gBEwDhBL,eAbS,SAAAC,GAAK,MAAK,MAKP,SAAAE,GAAQ,MAAI,CAErCW,QAAS,SAAAH,GACPR,ED1DmB,SAAAQ,GAAI,MAAI,CAC7BL,KAAMR,EACNS,QAASI,GCwDEG,CAAQH,QAKNX,EAlDG,SAAC,GAAe,IAAdc,EAAa,EAAbA,QAElB,EAA0BC,mBAAS,IAAnC,mBAAOH,EAAP,KAAcI,EAAd,KAEMC,EAAe,SAAAC,GAEnB,GADAA,EAAEC,iBACW,KAAVP,EACD,OAAOQ,MAAM,qBAGf,IAAMT,EAAO,CACXC,QACAP,GAAIgB,eAENP,EAAQH,GACRK,EAAS,KAGX,OACE,cAAC,IAAD,CAAMM,SAAUL,EAAhB,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEX,KAAK,OACLiB,KAAK,OACLlB,GAAG,OACHmB,YAAY,iBACZC,MAAOb,EACPc,SAAU,SAAAR,GAAC,OAAGF,EAASE,EAAES,OAAOF,UAElC,cAAC,IAAD,CAAQG,MAAM,OAAOf,QAASI,EAA9B,2BC/CK,MAA0B,iC,gBCKnCY,EAAe,GCCfC,EAAcC,YAAgB,CAClC7B,MDAa,WAAmC,IAAlCD,EAAiC,uDAAzB4B,EAAcG,EAAW,uCAE/C,OAAOA,EAAO1B,MACZ,KAAKR,EACH,MAAM,GAAN,mBAAUG,GAAV,CAAiB+B,EAAOzB,UAC1B,KAAKR,EACH,OAAOE,EAAMgC,QACX,SAAAtB,GAAI,OAAIA,EAAKN,KAAO2B,EAAOzB,WAE/B,QACE,OAAON,MCHEiC,EAFDC,YAAYL,GCeXM,MAdf,WAEC,OACC,cAAC,IAAD,CAAUF,MAAOA,EAAjB,SACC,eAAC,IAAD,CAAWG,OAAK,EAAhB,UACC,qBAAKC,IAAKC,EAAM9B,UAAU,WAAW+B,IAAI,SACzC,yDACA,cAAC,EAAD,IACA,cAAC,EAAD,UCTWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.da0e5f81.chunk.js","sourcesContent":["//these are actions\r\nexport const ADD_TODO = 'ADD_TODO';\r\nexport const REMOVE_TODO = 'REMOVE_TODO';","import React from 'react'\r\nimport { ListGroup, ListGroupItem } from 'reactstrap'\r\nimport {FaCheckDouble} from \"react-icons/fa\"\r\n\r\nimport { removeTodo } from '../action/todo'\r\nimport {connect} from 'react-redux'\r\n\r\nconst Todo = ({todos, markComplete}) => {\r\n  return (\r\n    <ListGroup className='mt-5 mb-2 items'>\r\n    {todos.map((todo) =>(\r\n      <ListGroupItem key={todo.id}>\r\n        {todo.title}\r\n        <span onClick={() =>markComplete(todo.id)} className='float-end'>\r\n          <FaCheckDouble/>\r\n        </span>\r\n      </ListGroupItem>\r\n    ))}\r\n    </ListGroup>\r\n  )\r\n}\r\n//todos comes from central state\r\nconst mapStateToProps = state =>({\r\n  todos: state.todos\r\n})\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n  markComplete: id =>{\r\n    dispatch(removeTodo(id))\r\n  }\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todo)","import { ADD_TODO, REMOVE_TODO } from \"./action-type\";\r\n//these are the actions and action creator\r\n//return an object including type and other key value pair\r\n\r\nexport const addTodo = todo =>({\r\n  type: ADD_TODO,\r\n  payload: todo\r\n})\r\n\r\nexport const removeTodo = id =>({\r\n  type: REMOVE_TODO,\r\n  payload: id\r\n})","import React,{ useState } from 'react'\r\n\r\nimport { \r\n Form,\r\n FormGroup,\r\n Input,\r\n Button,\r\n InputGroup,\r\n InputGroupAddon\r\n} from 'reactstrap'\r\n\r\nimport {v4} from 'uuid'\r\n//implementation of version of redux for react\r\nimport {connect} from 'react-redux'\r\n\r\nimport {addTodo} from  '../action/todo'\r\n\r\n const TodoForm = ({addTodo}) => {\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const handleSubmit = e =>{\r\n    e.preventDefault();\r\n    if(title === ''){\r\n      return alert('Please add a todo')\r\n    }\r\n\r\n    const todo = {\r\n      title,\r\n      id: v4()\r\n    }\r\n    addTodo(todo);\r\n    setTitle(\"\");\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <FormGroup>\r\n        <InputGroup>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"todo\"\r\n            id=\"todo\"\r\n            placeholder='Your next Todo'\r\n            value={title}\r\n            onChange={e =>setTitle(e.target.value)}\r\n          />\r\n          <Button color=\"info\" onClick={handleSubmit}>ADD</Button>\r\n         </InputGroup>\r\n      </FormGroup>\r\n    </Form>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n //to bring data from the state into component\r\n //from the central state into your application\r\n})\r\n//dispatch action from component\r\nconst mapDispatchToProps = dispatch =>({\r\n\r\n  addTodo: todo =>{\r\n    dispatch(addTodo(todo))\r\n  }\r\n\r\n})\r\n//connect redux with react\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoForm)","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { ADD_TODO, REMOVE_TODO } from \"../action/action-type\";\r\n\r\n//todo reducer\r\n//reducer takes two parameter state and action and return new state\r\n\r\nconst initialstate = [];\r\n\r\nexport default (state = initialstate, action) => {\r\n\r\n  switch(action.type){\r\n    case ADD_TODO:\r\n      return[...state, action.payload]\r\n    case REMOVE_TODO:\r\n      return state.filter(\r\n        todo => todo.id !== action.payload\r\n      )\r\n    default:\r\n      return state\r\n  }\r\n\r\n}","import {createStore, combineReducers} from \"redux\"\r\n\r\nimport todos from \"./reducer/todo\"\r\n\r\n//for combining multiple reducer\r\n\r\nconst rootReducer = combineReducers({\r\n  todos\r\n})\r\n\r\n// and create a store for reducers\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store","import react from \"react\";\nimport { Container } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport Todo from \"./components/Todo\";\nimport TodoForm from \"./components/TodoForm\";\nimport logo from './logo.svg';\n\nimport { Provider } from \"react-redux\";\n\nimport store from \"./store\";\n\nfunction App() {\n\t//provider makes available store to components\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<Container fluid>\n\t\t\t\t<img src={logo} className=\"App-logo\" alt=\"logo\" />\n\t\t\t\t<h1>Todo with local storage</h1>\n\t\t\t\t<TodoForm />\n\t\t\t\t<Todo />\n\t\t\t</Container>\n\t\t</Provider>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}